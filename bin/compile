#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3


echo "path ENV_DIR: ${ENV_DIR}"
ls -la $ENV_DIR

DB_URL_ENV=$(cat $ENV_DIR/DB_URL)
DB_USER_ENV=$(cat $ENV_DIR/DB_USER)
DB_PASSWORD_ENV=$(cat $ENV_DIR/DB_PASSWORD)
echo "DB_URL_ENV: ${DB_URL_ENV}"
echo "DB_USER_ENV: ${DB_USER_ENV}"
echo "DB_PASSWORD_ENV: ${DB_PASSWORD_ENV}"

echo "path BUILD_DIR: ${BUILD_DIR}"
ls -la $BUILD_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-"https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"}
mkdir -p /tmp/jvm-common
curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

install_java_with_overlay ${BUILD_DIR}

# WILDFLY_VERSION="25.0.1.Final"
WILDFLY_VERSION="16.0.0.Final"
# WILDFLY_SHA1="5e73ce775be1307905c72009e59a55957c8ef81a"
JBOSS_HOME=".jboss/wildfly-${WILDFLY_VERSION}"

cd $BUILD_DIR

mkdir -p .jboss

echo -n "-----> downloading Wildfly ${WILDFLY_VERSION}... "
# wget https://github.com/wildfly/wildfly/releases/download/25.0.1.Final/wildfly-25.0.1.Final.tar.gz
wget https://download.jboss.org/wildfly/16.0.0.Final/wildfly-16.0.0.Final.tar.gz
echo "downloaded"
# sha1sum wildfly-$WILDFLY_VERSION.tar.gz | grep $WILDFLY_SHA1 > /dev/null 2>&1
# echo "verified"
tar xf wildfly-$WILDFLY_VERSION.tar.gz
echo "extracted"
mv wildfly-$WILDFLY_VERSION $JBOSS_HOME
echo "moved"
rm wildfly-$WILDFLY_VERSION.tar.gz
echo "done"

echo -n "-----> Deploying war file(s)... "
# cp target/*.war $JBOSS_HOME/standalone/deployments/
cp 05_myWMS-ear/target/*.ear $JBOSS_HOME/standalone/deployments/
echo "done"

#DB_CONNECTION_URL
#DB_USER_NAME
#DB_USER_PASSWORD

# Get the absolute path of the buildpack directory
BP_DIR="$(cd "${0%/*}/.."; pwd)"
echo "absolute path: ${BP_DIR}"
cp $BP_DIR/postgresql-42.7.2.jar $JBOSS_HOME/standalone/deployments/
# cp $BP_DIR/standalone-25_0_1_Final.xml $JBOSS_HOME/standalone/configuration/standalone.xml
cp $BP_DIR/standalone.xml $JBOSS_HOME/standalone/configuration/standalone.xml
sed -i -e 's/DB_CONNECTION_URL/DB_URL_ENV/g' $JBOSS_HOME/standalone/configuration/standalone.xml
sed -i -e 's/DB_USER_NAME/DB_USER_ENV/g' $JBOSS_HOME/standalone/configuration/standalone.xml
sed -i -e 's/DB_USER_PASSWORD/DB_PASSWORD_ENV/g' $JBOSS_HOME/standalone/configuration/standalone.xml
# cp $BP_DIR/standalone.conf $JBOSS_HOME/bin/standalone.conf

echo "-----> Creating configuration..."
if [ -f $BUILD_DIR/Procfile ]; then
  echo "        - using existing process types"
else
  cat << EOF > $BUILD_DIR/Procfile
web: \$JBOSS_HOME/bin/standalone.sh -b=0.0.0.0 -Djboss.http.port=\$PORT
EOF
fi

cat << EOF > $BUILD_DIR/.profile.d/jboss.sh
export JBOSS_HOME=${JBOSS_HOME}
# prevent WFLYLOG0078
# export JAVA_TOOL_OPTIONS="\${JAVA_TOOL_OPTIONS} -Djboss.modules.system.pkgs=org.jboss.logmanager"
# export JAVA_TOOL_OPTIONS="\${JAVA_TOOL_OPTIONS} -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
# export JAVA_TOOL_OPTIONS="\${JAVA_TOOL_OPTIONS} -Xbootclasspath/p:$JBOSS_HOME/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-2.0.4.Final.jar"
EOF
